"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[541],{9541:function(e,t,r){r.r(t),r.d(t,{PreferencesWeb:function(){return PreferencesWeb}});var i=r(9895);let PreferencesWeb=class PreferencesWeb extends i.Uw{constructor(){super(...arguments),this.group="CapacitorStorage"}async configure({group:e}){"string"==typeof e&&(this.group=e)}async get(e){let t=this.impl.getItem(this.applyPrefix(e.key));return{value:t}}async set(e){this.impl.setItem(this.applyPrefix(e.key),e.value)}async remove(e){this.impl.removeItem(this.applyPrefix(e.key))}async keys(){let e=this.rawKeys().map(e=>e.substring(this.prefix.length));return{keys:e}}async clear(){for(let e of this.rawKeys())this.impl.removeItem(e)}async migrate(){var e;let t=[],r=[],i="_cap_",s=Object.keys(this.impl).filter(e=>0===e.indexOf(i));for(let n of s){let s=n.substring(i.length),a=null!==(e=this.impl.getItem(n))&&void 0!==e?e:"",{value:l}=await this.get({key:s});"string"==typeof l?r.push(s):(await this.set({key:s,value:a}),t.push(s))}return{migrated:t,existing:r}}async removeOld(){let e=Object.keys(this.impl).filter(e=>0===e.indexOf("_cap_"));for(let t of e)this.impl.removeItem(t)}get impl(){return window.localStorage}get prefix(){return"NativeStorage"===this.group?"":`${this.group}.`}rawKeys(){return Object.keys(this.impl).filter(e=>0===e.indexOf(this.prefix))}applyPrefix(e){return this.prefix+e}}}}]);